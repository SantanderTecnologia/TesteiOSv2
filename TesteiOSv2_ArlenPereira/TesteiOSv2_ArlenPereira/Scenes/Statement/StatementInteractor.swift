//
//  StatementInteractor.swift
//  TesteiOSv2_ArlenPereira
//
//  Created by Arlen Ricardo Pereira on 28/01/20.
//  Copyright (c) 2020 Arlen Ricardo Pereira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StatementBusinessLogic
{
    func requestUserInfo(request: StatementsModel.UserInfoModel.Request)
    func requestStatements(userId: Int?, request: StatementsModel.StatementsRequestModel.Request)
}

protocol StatementDataStore
{
  var userInfo: LoginAPIModel? { get set }
}

class StatementInteractor: StatementBusinessLogic, StatementDataStore
{
    var presenter: StatementsPresentationLogic?
    var serviceWorker = ServiceWorkers(serviceStore: ServiceRestAPI())
    var userInfo: LoginAPIModel?
  
    // MARK: - Function

    func requestUserInfo(request: StatementsModel.UserInfoModel.Request)
    {
        guard let user = userInfo else { return }
        let response = StatementsModel.UserInfoModel.Response(userInfoResponse: user)
        presenter?.presentUserInfo(response: response)
    }
    
    func requestStatements(userId: Int?, request: StatementsModel.StatementsRequestModel.Request)
    {
        serviceWorker.statementsRequest(userId: userId ?? 0) { (responseData) in
            let response = StatementsModel.StatementsRequestModel.Response(statementsResponse: responseData)
            self.presenter?.presentStatements(response: response)
        }
    }
}
