//
//  UserBalancePresenterTests.swift
//  TesteiOSv2Project
//
//  Created by Andrey on 16/06/20.
//  Copyright (c) 2020 Andrey Matos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import TesteiOSv2Project
import XCTest

class UserBalancePresenterTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: UserBalancePresenter!
    
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        setupUserBalancePresenter()
    }
    
    override func tearDown()
    {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupUserBalancePresenter()
    {
        sut = UserBalancePresenter()
    }
    
    // MARK: Test doubles
    
    class UserBalanceDisplayLogicSpy: UserBalanceDisplayLogic {
        var displayStatementsCalled = false
        var displayUserInfoCalled = false
        var navigateBackCalled = false
        
        func displayStatements(viewModel: UserBalance.FetchStatements.ViewModel) {
            displayStatementsCalled = true
        }
        
        func displayUserInfo(userInfo: UserBalance.FetchStatements.ViewModel.DisplayedUser) {
            displayUserInfoCalled = true
        }
        
        func navigateBack() {
            navigateBackCalled = true
        }
    }
    
    // MARK: Tests
    
    func testPresentStatements(){
        // Given
        let spy = UserBalanceDisplayLogicSpy()
        sut.viewController = spy
        
        // When
        let response = UserBalance.FetchStatements.Response(statements: [])
        sut.presentStatements(response: response)
        
        // Then
        XCTAssertTrue(spy.displayStatementsCalled, "Should ask the view controller to display the statements")
    }
    
    func testPresentUserInfo(){
        // Given
        let spy = UserBalanceDisplayLogicSpy()
        sut.viewController = spy
        
        // When
        let userAccount = UserAccount()
        sut.presentUserInfo(userAccount: userAccount)
        
        // Then
        XCTAssertTrue(spy.displayUserInfoCalled, "Should ask the view controller to display the user information")
    }
    
}
